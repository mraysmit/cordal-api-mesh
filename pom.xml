<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dev.cordal</groupId>
    <artifactId>cordal</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>CORDAL - Parent</name>
    <description>Parent POM for CORDAL - Configuration Orchestrated REST Dynamic API Layer</description>

    <modules>
        <module>cordal-common-library</module>
        <module>cordal-api-service</module>
        <module>cordal-metrics-service</module>
        <module>cordal-integration-tests</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <javalin.version>6.7.0</javalin.version>
        <h2.version>2.3.232</h2.version>
        <postgresql.version>42.7.4</postgresql.version>
        <hikari.version>6.3.0</hikari.version>
        <jackson.version>2.17.1</jackson.version>
        <guice.version>7.0.0</guice.version>
        <snakeyaml.version>2.4</snakeyaml.version>
        <logback.version>1.5.6</logback.version>
        <junit.version>5.10.2</junit.version>

        <!-- Build Profile Properties -->
        <jar.classifier>executable</jar.classifier>
        <shade.minimizeJar>false</shade.minimizeJar>
        <shade.createDependencyReducedPom>false</shade.createDependencyReducedPom>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Javalin Framework -->
            <dependency>
                <groupId>io.javalin</groupId>
                <artifactId>javalin</artifactId>
                <version>${javalin.version}</version>
            </dependency>

            <!-- Jackson for JSON -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- H2 Database -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>

            <!-- PostgreSQL Database -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>

            <!-- HikariCP Connection Pool -->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikari.version}</version>
            </dependency>

            <!-- Guice Dependency Injection -->
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <!-- javax.inject API -->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
            </dependency>

            <!-- SnakeYAML for configuration -->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- Swagger/OpenAPI - Using WebJars for UI only -->
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>swagger-ui</artifactId>
                <version>5.1.0</version>
            </dependency>

            <!-- Test Dependencies -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-suite</artifactId>
                <version>1.10.2</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>3.26.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>1.19.8</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.javalin</groupId>
                <artifactId>javalin-testtools</artifactId>
                <version>${javalin.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- JUnit Platform Dependencies for Test Profiling -->
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-launcher</artifactId>
                <version>1.10.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-reporting</artifactId>
                <version>1.10.2</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <release>21</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>

                <!-- Maven Shade Plugin for creating executable fat JARs -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.5.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!-- Distribution Profiles for Different JAR Types -->
    <profiles>
        <!-- Fat JAR Profile (Default) - Includes all dependencies -->
        <profile>
            <id>fat-jar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <jar.classifier>executable</jar.classifier>
                <shade.minimizeJar>false</shade.minimizeJar>
                <shade.createDependencyReducedPom>false</shade.createDependencyReducedPom>
            </properties>
        </profile>

        <!-- Thin JAR Profile - Minimal dependencies only -->
        <profile>
            <id>thin-jar</id>
            <properties>
                <jar.classifier>thin</jar.classifier>
                <shade.minimizeJar>true</shade.minimizeJar>
                <shade.createDependencyReducedPom>true</shade.createDependencyReducedPom>
            </properties>
        </profile>

        <!-- Optimized JAR Profile - Fat JAR with minimization -->
        <profile>
            <id>optimized-jar</id>
            <properties>
                <jar.classifier>optimized</jar.classifier>
                <shade.minimizeJar>true</shade.minimizeJar>
                <shade.createDependencyReducedPom>false</shade.createDependencyReducedPom>
            </properties>
        </profile>

        <!-- Development Profile - Fast builds, skip optimization -->
        <profile>
            <id>dev</id>
            <properties>
                <jar.classifier>dev</jar.classifier>
                <shade.minimizeJar>false</shade.minimizeJar>
                <shade.createDependencyReducedPom>false</shade.createDependencyReducedPom>
                <maven.test.skip>true</maven.test.skip>
            </properties>
        </profile>
    </profiles>

</project>