# Generic API Service Configuration

application:
  name: generic-api-service

server:
  host: localhost
  port: 8080

database:
  url: jdbc:h2:./data/api-service-config;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1
  username: sa
  password: ""
  driver: org.h2.Driver
  createIfMissing: true  # Create database if it doesn't exist

swagger:
  enabled: true
  path: /swagger

# Configuration source and directory scanning
config:
  source: yaml  # Options: yaml, database
  # Load configuration data from YAML files into database (only when source is database)
  loadFromYaml: false  # Set to true to populate database from YAML files on startup

  # Directories to scan for configuration files
  # Multiple paths to support both IDE execution (from project root) and command-line execution (from generic-api-service directory)
  directories:
    - "generic-config"        # For IDE execution from project root
    - "../generic-config"     # For command-line execution from generic-api-service directory

  # Naming patterns for configuration files
  patterns:
    databases: ["*-database.yml", "*-databases.yml"]
    queries: ["*-query.yml", "*-queries.yml"]
    endpoints: ["*-endpoint.yml", "*-endpoints.yml", "*-api.yml"]

# Configuration validation settings
validation:
  # Run validation during normal application startup
  runOnStartup: false  # Set to true to validate configurations on every startup
  # Run only validation and exit (for standalone configuration checking)
  validateOnly: false  # Set to true to run validation checks and exit without starting server
